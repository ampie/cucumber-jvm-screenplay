<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="cucumber.screenplay.formatter.WhenActorTasksFail" tests="1" skipped="0" failures="0" errors="0" timestamp="2017-05-21T12:51:18" hostname="ampie-dvt-laptop" time="0.051">
  <properties/>
  <testcase name="the tasks up to the failing task should reflect as child steps, and subsequent tasks should reflect as skipped" classname="cucumber.screenplay.formatter.WhenActorTasksFail" time="0.051"/>
  <system-out><![CDATA[
?[31mFailed scenarios:?[0m
?[31mcucumber/screenplay/OneTaskFailedOneImplemented.feature:4 ?[0m# Scenario: Flow through the screens

1 Scenarios (?[31m1 failed?[0m)
1 Steps (?[31m1 failed?[0m)
0m0.000s

java.lang.RuntimeException
	at cucumber.screenplay.TaskSteps.johnSmithPerformsOneFailingTaskAndOneImplementedTask(TaskSteps.java:82)
	at ✽.Given John Smith performs one failing task and one implemented task(cucumber/screenplay/OneTaskFailedOneImplemented.feature:5)

[
  {
    "line": 1,
    "elements": [
      {
        "line": 4,
        "name": "Flow through the screens",
        "description": "",
        "id": "basic-screen-flow;flow-through-the-screens",
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1234,
              "error_message": "java.lang.RuntimeException\n\tat cucumber.screenplay.TaskSteps.johnSmithPerformsOneFailingTaskAndOneImplementedTask(TaskSteps.java:82)\n\tat ✽.Given John Smith performs one failing task and one implemented task(cucumber/screenplay/OneTaskFailedOneImplemented.feature:5)\n",
              "status": "failed"
            },
            "children": [
              {
                "result": {
                  "duration": 9999,
                  "error_message": "java.lang.RuntimeException\n\tat cucumber.screenplay.TaskSteps.johnSmithPerformsOneFailingTaskAndOneImplementedTask(TaskSteps.java:82)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat cucumber.runtime.Utils$1.call(Utils.java:40)\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\n\tat cucumber.runtime.Utils.invoke(Utils.java:34)\n\tat cucumber.runtime.java.JavaStepDefinition.execute(JavaStepDefinition.java:38)\n\tat cucumber.runtime.StepDefinitionMatch.runStep(StepDefinitionMatch.java:37)\n\tat cucumber.runtime.Runtime.runStep(Runtime.java:300)\n\tat cucumber.runtime.model.StepContainer.runStep(StepContainer.java:44)\n\tat cucumber.runtime.model.StepContainer.runSteps(StepContainer.java:39)\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:44)\n\tat cucumber.runtime.model.CucumberFeature.run(CucumberFeature.java:165)\n\tat cucumber.runtime.Runtime.run(Runtime.java:122)\n\tat cucumber.runtime.Runtime$run.call(Unknown Source)\n\tat cucumber.screenplay.formatter.WhenPerformingChildSteps.runFeaturesWithScreenplayPlugin(WhenPerformingChildSteps.groovy:30)\n\tat cucumber.screenplay.formatter.WhenPerformingChildSteps$runFeaturesWithScreenplayPlugin.callCurrent(Unknown Source)\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:52)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:154)\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:166)\n\tat cucumber.screenplay.formatter.WhenActorTasksFail.$spock_feature_1_0(WhenActorTasksFail.groovy:13)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.spockframework.util.ReflectionUtil.invokeMethod(ReflectionUtil.java:138)\n\tat org.spockframework.runtime.BaseSpecRunner.invokeRaw(BaseSpecRunner.java:330)\n\tat org.spockframework.runtime.BaseSpecRunner.invoke(BaseSpecRunner.java:311)\n\tat org.spockframework.runtime.BaseSpecRunner.invokeFeatureMethod(BaseSpecRunner.java:285)\n\tat org.spockframework.runtime.BaseSpecRunner.doRunIteration(BaseSpecRunner.java:256)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.spockframework.util.ReflectionUtil.invokeMethod(ReflectionUtil.java:138)\n\tat org.spockframework.runtime.BaseSpecRunner.invokeRaw(BaseSpecRunner.java:330)\n\tat org.spockframework.runtime.BaseSpecRunner.invoke(BaseSpecRunner.java:311)\n\tat org.spockframework.runtime.BaseSpecRunner.runIteration(BaseSpecRunner.java:223)\n\tat org.spockframework.runtime.BaseSpecRunner.initializeAndRunIteration(BaseSpecRunner.java:214)\n\tat org.spockframework.runtime.BaseSpecRunner.runSimpleFeature(BaseSpecRunner.java:205)\n\tat org.spockframework.runtime.BaseSpecRunner.doRunFeature(BaseSpecRunner.java:199)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.spockframework.util.ReflectionUtil.invokeMethod(ReflectionUtil.java:138)\n\tat org.spockframework.runtime.BaseSpecRunner.invokeRaw(BaseSpecRunner.java:330)\n\tat org.spockframework.runtime.BaseSpecRunner.invoke(BaseSpecRunner.java:311)\n\tat org.spockframework.runtime.BaseSpecRunner.runFeature(BaseSpecRunner.java:175)\n\tat org.spockframework.runtime.BaseSpecRunner.runFeatures(BaseSpecRunner.java:152)\n\tat org.spockframework.runtime.BaseSpecRunner.doRunSpec(BaseSpecRunner.java:112)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.spockframework.util.ReflectionUtil.invokeMethod(ReflectionUtil.java:138)\n\tat org.spockframework.runtime.BaseSpecRunner.invokeRaw(BaseSpecRunner.java:330)\n\tat org.spockframework.runtime.BaseSpecRunner.invoke(BaseSpecRunner.java:311)\n\tat org.spockframework.runtime.BaseSpecRunner.runSpec(BaseSpecRunner.java:91)\n\tat org.spockframework.runtime.BaseSpecRunner.run(BaseSpecRunner.java:82)\n\tat org.spockframework.runtime.Sputnik.run(Sputnik.java:63)\n\tat org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.runTestClass(JUnitTestClassExecuter.java:114)\n\tat org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecuter.execute(JUnitTestClassExecuter.java:57)\n\tat org.gradle.api.internal.tasks.testing.junit.JUnitTestClassProcessor.processTestClass(JUnitTestClassProcessor.java:66)\n\tat org.gradle.api.internal.tasks.testing.SuiteTestClassProcessor.processTestClass(SuiteTestClassProcessor.java:51)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.dispatch.ContextClassLoaderDispatch.dispatch(ContextClassLoaderDispatch.java:32)\n\tat org.gradle.internal.dispatch.ProxyDispatchAdapter$DispatchingInvocationHandler.invoke(ProxyDispatchAdapter.java:93)\n\tat com.sun.proxy.$Proxy2.processTestClass(Unknown Source)\n\tat org.gradle.api.internal.tasks.testing.worker.TestWorker.processTestClass(TestWorker.java:109)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:498)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:35)\n\tat org.gradle.internal.dispatch.ReflectionDispatch.dispatch(ReflectionDispatch.java:24)\n\tat org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:147)\n\tat org.gradle.internal.remote.internal.hub.MessageHubBackedObjectConnection$DispatchWrapper.dispatch(MessageHubBackedObjectConnection.java:129)\n\tat org.gradle.internal.remote.internal.hub.MessageHub$Handler.run(MessageHub.java:404)\n\tat org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)\n\tat org.gradle.internal.concurrent.StoppableExecutorImpl$1.run(StoppableExecutorImpl.java:46)\n\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)\n\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)\n\tat java.lang.Thread.run(Thread.java:745)\n",
                  "status": "failed"
                },
                "name": "enter the userName \u0027john@gmail.com\u0027 and password \u0027Password123\u0027",
                "match": {
                  "arguments": [
                    {
                      "val": "john@gmail.com"
                    },
                    {
                      "val": "Password123"
                    }
                  ],
                  "location": "EnterCredentials Actor performAs"
                },
                "keyword": "Was able to"
              },
              {
                "result": {
                  "status": "skipped"
                },
                "name": "enter the userName \u0027john@gmail.com\u0027 and password \u0027Password123\u0027",
                "match": {
                  "arguments": [
                    {
                      "val": "john@gmail.com"
                    },
                    {
                      "val": "Password123"
                    }
                  ],
                  "location": "EnterCredentials Actor performAs"
                },
                "keyword": "Was able to"
              }
            ],
            "line": 5,
            "name": "John Smith performs one failing task and one implemented task",
            "match": {
              "location": "TaskSteps.johnSmithPerformsOneFailingTaskAndOneImplementedTask()"
            },
            "keyword": "Given "
          }
        ]
      }
    ],
    "name": "Basic Screen Flow",
    "description": "As a User I would like to flow through the screen so that interesting things can happen",
    "id": "basic-screen-flow",
    "keyword": "Feature",
    "uri": "cucumber/screenplay/OneTaskFailedOneImplemented.feature"
  }
]
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
